#!/bin/bash

# Script for the backup of files from a string with the date format yyyy-mm-dd hh:ss:mm in the destination /tmp/backup_script2

#File name and string with the txt saved for the names of the files to backup
filename="createPassUser.txt"

#script used to make the backup automatic when there is a cron call
script_main_automatic() {
    while read line; do
        arrIN=(${line//;/ })
        echo "${arrIN[0]} ${arrIN[1]}"
        htpasswd -b "/etc/nginx/.htpasswd" "${arrIN[0]}" "${arrIN[1]}"
    done <$filename
}

#script for the adition of a new file name to backup
script_main_add_file_backup() {
    echo -en "${string}\n" >>$filename
}

#usage of the command with the corresponding options or arguments
usage() {
    echo "usage: script_2 [[[-d string ] [-i]] | [-h]]"
}

##### Main

automatic=0
interactive=
string=$HOME

while [ "$1" != "" ]; do
    case $1 in
    -s | --string)
        shift
        string=$1
        automatic=1
        ;;
    -i | --interactive)
        interactive=1
        automatic=1
        ;;
    -h | --help)
        usage
        automatic=2
        exit
        ;;
    *)
        usage
        automatic=2
        exit 1
        ;;
    esac
    shift
done

# Test code to verify command line processing

if [ "$interactive" = "1" ]; then

    response=

    read -p "Enter name of string [$string] > " response
    if [ -n "$response" ]; then
        string="$response"
    fi

    if [ -f $string ]; then
        echo -n "Output file exists. Overwrite? (y/n) > "
        read response
        if [ "$string" != "y" ]; then
            echo "Exiting program."
            exit 1
        fi
    fi
fi

#Validation of the script to call for the automatic process of the backup
if [ "$automatic" = "0" ]; then
    script_main_automatic
elif [ "$automatic" = "1" ]; then
    script_main_add_file_backup
fi